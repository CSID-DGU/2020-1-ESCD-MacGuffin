{"ast":null,"code":"import { createAction, handleActions } from 'redux-actions';\nimport { pender } from 'redux-pender';\nimport * as AuthAPI from 'lib/api/auth';\nimport { Map } from 'immutable';\nconst CHECK_EMAIL_EXISTS = 'auth/CHECK_EMAIL_EXISTS'; // 이메일 중복 확인\n\nconst CHECK_USERNAME_EXISTS = 'auth/CHECK_USERNAME_EXISTS'; // 아이디 중복 확인\n\nconst CHANGE_INPUT = 'auth/CHANGE_INPUT'; // input 값 변경\n\nconst INITIALIZE_FORM = 'auth/INITIALIZE_FORM'; // form 초기화\n\nexport const changeInput = createAction(CHANGE_INPUT); //  { form, name, value }\n\nexport const initializeForm = createAction(INITIALIZE_FORM); // form \n\nexport const checkEmailExists = createAction(CHECK_EMAIL_EXISTS, AuthAPI.checkEmailExists); // email\n\nexport const checkUsernameExists = createAction(CHECK_USERNAME_EXISTS, AuthAPI.checkUsernameExists); // username\n\nconst initialState = Map({\n  register: Map({\n    form: Map({\n      email: '',\n      username: '',\n      password: '',\n      passwordConfirm: ''\n    })\n  }),\n  login: Map({\n    form: Map({\n      email: '',\n      password: ''\n    })\n  })\n});\nexport default handleActions({\n  [CHANGE_INPUT]: (state, action) => {\n    const {\n      form,\n      name,\n      value\n    } = action.payload;\n    return state.setIn([form, 'form', name], value);\n  },\n  [INITIALIZE_FORM]: (state, action) => {\n    const initialForm = initialState.get(action.payload);\n    return state.set(action.payload, initialForm);\n  }\n}, initialState);","map":{"version":3,"sources":["C:/Users/BumSu Park/React/macguffin/src/redux/modules/auth.js"],"names":["createAction","handleActions","pender","AuthAPI","Map","CHECK_EMAIL_EXISTS","CHECK_USERNAME_EXISTS","CHANGE_INPUT","INITIALIZE_FORM","changeInput","initializeForm","checkEmailExists","checkUsernameExists","initialState","register","form","email","username","password","passwordConfirm","login","state","action","name","value","payload","setIn","initialForm","get","set"],"mappings":"AAAA,SAAQA,YAAR,EAAsBC,aAAtB,QAA0C,eAA1C;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,OAAO,KAAKC,OAAZ,MAAyB,cAAzB;AAEA,SAAQC,GAAR,QAAkB,WAAlB;AAEA,MAAMC,kBAAkB,GAAG,yBAA3B,C,CAAsD;;AACtD,MAAMC,qBAAqB,GAAG,4BAA9B,C,CAA4D;;AAG5D,MAAMC,YAAY,GAAG,mBAArB,C,CAA0C;;AAC1C,MAAMC,eAAe,GAAG,sBAAxB,C,CAAgD;;AAEhD,OAAO,MAAMC,WAAW,GAAGT,YAAY,CAACO,YAAD,CAAhC,C,CAAgD;;AACvD,OAAO,MAAMG,cAAc,GAAGV,YAAY,CAACQ,eAAD,CAAnC,C,CAAsD;;AAE7D,OAAO,MAAMG,gBAAgB,GAAGX,YAAY,CAACK,kBAAD,EAAqBF,OAAO,CAACQ,gBAA7B,CAArC,C,CAAqF;;AAC5F,OAAO,MAAMC,mBAAmB,GAAGZ,YAAY,CAACM,qBAAD,EAAwBH,OAAO,CAACS,mBAAhC,CAAxC,C,CAA8F;;AAGrG,MAAMC,YAAY,GAAGT,GAAG,CAAC;AACrBU,EAAAA,QAAQ,EAAEV,GAAG,CAAC;AACVW,IAAAA,IAAI,EAAEX,GAAG,CAAC;AACNY,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,QAAQ,EAAE,EAFJ;AAGNC,MAAAA,QAAQ,EAAE,EAHJ;AAINC,MAAAA,eAAe,EAAE;AAJX,KAAD;AADC,GAAD,CADQ;AASrBC,EAAAA,KAAK,EAAEhB,GAAG,CAAC;AACPW,IAAAA,IAAI,EAAEX,GAAG,CAAC;AACNY,MAAAA,KAAK,EAAE,EADD;AAENE,MAAAA,QAAQ,EAAE;AAFJ,KAAD;AADF,GAAD;AATW,CAAD,CAAxB;AAiBA,eAAejB,aAAa,CAAC;AACzB,GAACM,YAAD,GAAgB,CAACc,KAAD,EAAQC,MAAR,KAAmB;AAC/B,UAAM;AAAEP,MAAAA,IAAF;AAAQQ,MAAAA,IAAR;AAAcC,MAAAA;AAAd,QAAwBF,MAAM,CAACG,OAArC;AACA,WAAOJ,KAAK,CAACK,KAAN,CAAY,CAACX,IAAD,EAAO,MAAP,EAAeQ,IAAf,CAAZ,EAAkCC,KAAlC,CAAP;AACH,GAJwB;AAKzB,GAAChB,eAAD,GAAmB,CAACa,KAAD,EAAQC,MAAR,KAAmB;AAClC,UAAMK,WAAW,GAAGd,YAAY,CAACe,GAAb,CAAiBN,MAAM,CAACG,OAAxB,CAApB;AACA,WAAOJ,KAAK,CAACQ,GAAN,CAAUP,MAAM,CAACG,OAAjB,EAA0BE,WAA1B,CAAP;AACH;AARwB,CAAD,EASzBd,YATyB,CAA5B","sourcesContent":["import {createAction, handleActions} from 'redux-actions';\r\nimport { pender } from 'redux-pender';\r\nimport * as AuthAPI from 'lib/api/auth';\r\n\r\nimport {Map} from 'immutable';\r\n\r\nconst CHECK_EMAIL_EXISTS = 'auth/CHECK_EMAIL_EXISTS'; // 이메일 중복 확인\r\nconst CHECK_USERNAME_EXISTS = 'auth/CHECK_USERNAME_EXISTS'; // 아이디 중복 확인\r\n\r\n\r\nconst CHANGE_INPUT = 'auth/CHANGE_INPUT'; // input 값 변경\r\nconst INITIALIZE_FORM = 'auth/INITIALIZE_FORM'; // form 초기화\r\n\r\nexport const changeInput = createAction(CHANGE_INPUT); //  { form, name, value }\r\nexport const initializeForm = createAction(INITIALIZE_FORM); // form \r\n\r\nexport const checkEmailExists = createAction(CHECK_EMAIL_EXISTS, AuthAPI.checkEmailExists); // email\r\nexport const checkUsernameExists = createAction(CHECK_USERNAME_EXISTS, AuthAPI.checkUsernameExists); // username\r\n\r\n\r\nconst initialState = Map({\r\n    register: Map({\r\n        form: Map({\r\n            email: '',\r\n            username: '',\r\n            password: '',\r\n            passwordConfirm: ''\r\n        })\r\n    }),\r\n    login: Map({\r\n        form: Map({\r\n            email: '',\r\n            password: ''\r\n        })\r\n    })\r\n});\r\n\r\nexport default handleActions({\r\n    [CHANGE_INPUT]: (state, action) => {\r\n        const { form, name, value } = action.payload;\r\n        return state.setIn([form, 'form', name], value);\r\n    },\r\n    [INITIALIZE_FORM]: (state, action) => {\r\n        const initialForm = initialState.get(action.payload);\r\n        return state.set(action.payload, initialForm);\r\n    }\r\n}, initialState);"]},"metadata":{},"sourceType":"module"}