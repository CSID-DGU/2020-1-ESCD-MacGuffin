{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\BumSu Park\\\\React\\\\macguffin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\BumSu Park\\\\React\\\\macguffin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _createSuper from\"C:\\\\Users\\\\BumSu Park\\\\React\\\\macguffin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import _inherits from\"C:\\\\Users\\\\BumSu Park\\\\React\\\\macguffin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from'react';import{AuthContent,InputWithLabel,AuthButton,RightAlignedLink}from'components/Auth';import{connect}from'react-redux';import{bindActionCreators}from'redux';import*as authActions from'redux/modules/auth';var Login=/*#__PURE__*/function(_Component){_inherits(Login,_Component);var _super=_createSuper(Login);function Login(){var _this;_classCallCheck(this,Login);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.handleChange=function(e){var AuthActions=_this.props.AuthActions;var _e$target=e.target,name=_e$target.name,value=_e$target.value;AuthActions.changeInput({name:name,value:value,form:'login'});};return _this;}_createClass(Login,[{key:\"render\",value:function render(){var _this$props$form$toJS=this.props.form.toJS(),email=_this$props$form$toJS.email,password=_this$props$form$toJS.password;// form 에서 email 과 password 값을 읽어옴\nvar handleChange=this.handleChange;return/*#__PURE__*/React.createElement(AuthContent,{title:\"\\uB85C\\uADF8\\uC778\"},/*#__PURE__*/React.createElement(InputWithLabel,{label:\"\\uC774\\uBA54\\uC77C\",name:\"email\",placeholder:\"\\uC774\\uBA54\\uC77C\",value:email,onChange:handleChange}),/*#__PURE__*/React.createElement(InputWithLabel,{label:\"\\uBE44\\uBC00\\uBC88\\uD638\",name:\"password\",placeholder:\"\\uBE44\\uBC00\\uBC88\\uD638\",type:\"password\",value:password,onChange:handleChange}),/*#__PURE__*/React.createElement(AuthButton,null,\"\\uB85C\\uADF8\\uC778\"),/*#__PURE__*/React.createElement(RightAlignedLink,{to:\"/auth/register\"},\"\\uD68C\\uC6D0\\uAC00\\uC785\"));}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){var AuthActions=this.props.AuthActions;AuthActions.initializeForm('login');}}]);return Login;}(Component);export default connect(function(state){return{form:state.auth.getIn(['login','form'])};},function(dispatch){return{AuthActions:bindActionCreators(authActions,dispatch)};})(Login);","map":{"version":3,"sources":["C:/Users/BumSu Park/React/macguffin/src/containers/Auth/Login.js"],"names":["React","Component","AuthContent","InputWithLabel","AuthButton","RightAlignedLink","connect","bindActionCreators","authActions","Login","handleChange","e","AuthActions","props","target","name","value","changeInput","form","toJS","email","password","initializeForm","state","auth","getIn","dispatch"],"mappings":"oeAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,WAAT,CAAsBC,cAAtB,CAAsCC,UAAtC,CAAkDC,gBAAlD,KAA0E,iBAA1E,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAAQC,kBAAR,KAAiC,OAAjC,CACA,MAAO,GAAKC,CAAAA,WAAZ,KAA6B,oBAA7B,C,GAEMC,CAAAA,K,uTAEFC,Y,CAAe,SAACC,CAAD,CAAO,IACVC,CAAAA,WADU,CACM,MAAKC,KADX,CACVD,WADU,eAEMD,CAAC,CAACG,MAFR,CAEVC,IAFU,WAEVA,IAFU,CAEJC,KAFI,WAEJA,KAFI,CAIlBJ,WAAW,CAACK,WAAZ,CAAwB,CACpBF,IAAI,CAAJA,IADoB,CAEpBC,KAAK,CAALA,KAFoB,CAGpBE,IAAI,CAAE,OAHc,CAAxB,EAKH,C,wEAEQ,2BACuB,KAAKL,KAAL,CAAWK,IAAX,CAAgBC,IAAhB,EADvB,CACGC,KADH,uBACGA,KADH,CACUC,QADV,uBACUA,QADV,CAC+C;AAD/C,GAEGX,CAAAA,YAFH,CAEoB,IAFpB,CAEGA,YAFH,CAIL,mBACI,oBAAC,WAAD,EAAa,KAAK,CAAC,oBAAnB,eACI,oBAAC,cAAD,EACI,KAAK,CAAC,oBADV,CAEI,IAAI,CAAC,OAFT,CAGI,WAAW,CAAC,oBAHhB,CAII,KAAK,CAAEU,KAJX,CAKI,QAAQ,CAAEV,YALd,EADJ,cAQI,oBAAC,cAAD,EACI,KAAK,CAAC,0BADV,CAEI,IAAI,CAAC,UAFT,CAGI,WAAW,CAAC,0BAHhB,CAII,IAAI,CAAC,UAJT,CAKI,KAAK,CAAEW,QALX,CAMI,QAAQ,CAAEX,YANd,EARJ,cAgBI,oBAAC,UAAD,2BAhBJ,cAiBI,oBAAC,gBAAD,EAAkB,EAAE,CAAC,gBAArB,6BAjBJ,CADJ,CAqBH,C,mEAEsB,IACXE,CAAAA,WADW,CACK,KAAKC,KADV,CACXD,WADW,CAEnBA,WAAW,CAACU,cAAZ,CAA2B,OAA3B,EACH,C,mBA3CerB,S,EA8CpB,cAAeK,CAAAA,OAAO,CAClB,SAACiB,KAAD,QAAY,CACRL,IAAI,CAAEK,KAAK,CAACC,IAAN,CAAWC,KAAX,CAAiB,CAAC,OAAD,CAAU,MAAV,CAAjB,CADE,CAAZ,EADkB,CAIlB,SAACC,QAAD,QAAe,CACXd,WAAW,CAAEL,kBAAkB,CAACC,WAAD,CAAckB,QAAd,CADpB,CAAf,EAJkB,CAAP,CAObjB,KAPa,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { AuthContent, InputWithLabel, AuthButton, RightAlignedLink } from 'components/Auth';\r\nimport { connect } from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport * as authActions from 'redux/modules/auth';\r\n\r\nclass Login extends Component {\r\n\r\n    handleChange = (e) => {\r\n        const { AuthActions } = this.props;\r\n        const { name, value } = e.target;\r\n\r\n        AuthActions.changeInput({\r\n            name,\r\n            value,\r\n            form: 'login'\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { email, password } = this.props.form.toJS(); // form 에서 email 과 password 값을 읽어옴\r\n        const { handleChange } = this;\r\n\r\n        return (\r\n            <AuthContent title=\"로그인\">\r\n                <InputWithLabel \r\n                    label=\"이메일\" \r\n                    name=\"email\" \r\n                    placeholder=\"이메일\" \r\n                    value={email} \r\n                    onChange={handleChange}\r\n                />\r\n                <InputWithLabel \r\n                    label=\"비밀번호\" \r\n                    name=\"password\" \r\n                    placeholder=\"비밀번호\" \r\n                    type=\"password\" \r\n                    value={password} \r\n                    onChange={handleChange}\r\n                />\r\n                <AuthButton>로그인</AuthButton>\r\n                <RightAlignedLink to=\"/auth/register\">회원가입</RightAlignedLink>\r\n            </AuthContent>\r\n        );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const { AuthActions } = this.props;\r\n        AuthActions.initializeForm('login')\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        form: state.auth.getIn(['login', 'form'])\r\n    }),\r\n    (dispatch) => ({\r\n        AuthActions: bindActionCreators(authActions, dispatch)\r\n    })\r\n)(Login);"]},"metadata":{},"sourceType":"module"}