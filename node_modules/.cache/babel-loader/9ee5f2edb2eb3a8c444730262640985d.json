{"ast":null,"code":"import { createAction, handleActions } from 'redux-actions';\nimport { pender } from 'redux-pender';\nimport * as AuthAPI from 'lib/api/auth';\nimport { Map } from 'immutable';\nconst CHANGE_INPUT = 'auth/CHANGE_INPUT'; // input 값 변경\n\nconst INITIALIZE_FORM = 'auth/INITIALIZE_FORM'; // form 초기화\n\nexport const checkEmailExists = createAction(CHECK_EMAIL_EXISTS, AuthAPI.checkEmailExists); // email\n\nexport const checkUsernameExists = createAction(CHECK_USERNAME_EXISTS, AuthAPI.checkUsernameExists); // username\n\nconst initialState = Map({\n  register: Map({\n    form: Map({\n      email: '',\n      username: '',\n      password: '',\n      passwordConfirm: ''\n    }),\n    exists: Map({\n      email: false,\n      password: false\n    })\n  }),\n  login: Map({\n    form: Map({\n      email: '',\n      password: ''\n    })\n  })\n});\nexport default handleActions({\n  [CHANGE_INPUT]: (state, action) => {\n    const {\n      form,\n      name,\n      value\n    } = action.payload;\n    return state.setIn([form, 'form', name], value);\n  },\n  [INITIALIZE_FORM]: (state, action) => {\n    const initialForm = initialState.get(action.payload);\n    return state.set(action.payload, initialForm);\n  }\n}, initialState);","map":{"version":3,"sources":["C:/Users/BumSu Park/React/macguffin/src/redux/modules/auth.js"],"names":["createAction","handleActions","pender","AuthAPI","Map","CHANGE_INPUT","INITIALIZE_FORM","checkEmailExists","CHECK_EMAIL_EXISTS","checkUsernameExists","CHECK_USERNAME_EXISTS","initialState","register","form","email","username","password","passwordConfirm","exists","login","state","action","name","value","payload","setIn","initialForm","get","set"],"mappings":"AAAA,SAAQA,YAAR,EAAsBC,aAAtB,QAA0C,eAA1C;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,OAAO,KAAKC,OAAZ,MAAyB,cAAzB;AAEA,SAAQC,GAAR,QAAkB,WAAlB;AAEA,MAAMC,YAAY,GAAG,mBAArB,C,CAA0C;;AAC1C,MAAMC,eAAe,GAAG,sBAAxB,C,CAAgD;;AAEhD,OAAO,MAAMC,gBAAgB,GAAGP,YAAY,CAACQ,kBAAD,EAAqBL,OAAO,CAACI,gBAA7B,CAArC,C,CAAqF;;AAC5F,OAAO,MAAME,mBAAmB,GAAGT,YAAY,CAACU,qBAAD,EAAwBP,OAAO,CAACM,mBAAhC,CAAxC,C,CAA8F;;AAErG,MAAME,YAAY,GAAGP,GAAG,CAAC;AACrBQ,EAAAA,QAAQ,EAAER,GAAG,CAAC;AACVS,IAAAA,IAAI,EAAET,GAAG,CAAC;AACNU,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,QAAQ,EAAE,EAFJ;AAGNC,MAAAA,QAAQ,EAAE,EAHJ;AAINC,MAAAA,eAAe,EAAE;AAJX,KAAD,CADC;AAOVC,IAAAA,MAAM,EAAEd,GAAG,CAAC;AACRU,MAAAA,KAAK,EAAE,KADC;AAERE,MAAAA,QAAQ,EAAE;AAFF,KAAD;AAPD,GAAD,CADQ;AAarBG,EAAAA,KAAK,EAAEf,GAAG,CAAC;AACPS,IAAAA,IAAI,EAAET,GAAG,CAAC;AACNU,MAAAA,KAAK,EAAE,EADD;AAENE,MAAAA,QAAQ,EAAE;AAFJ,KAAD;AADF,GAAD;AAbW,CAAD,CAAxB;AAqBA,eAAef,aAAa,CAAC;AACzB,GAACI,YAAD,GAAgB,CAACe,KAAD,EAAQC,MAAR,KAAmB;AAC/B,UAAM;AAAER,MAAAA,IAAF;AAAQS,MAAAA,IAAR;AAAcC,MAAAA;AAAd,QAAwBF,MAAM,CAACG,OAArC;AACA,WAAOJ,KAAK,CAACK,KAAN,CAAY,CAACZ,IAAD,EAAO,MAAP,EAAeS,IAAf,CAAZ,EAAkCC,KAAlC,CAAP;AACH,GAJwB;AAKzB,GAACjB,eAAD,GAAmB,CAACc,KAAD,EAAQC,MAAR,KAAmB;AAClC,UAAMK,WAAW,GAAGf,YAAY,CAACgB,GAAb,CAAiBN,MAAM,CAACG,OAAxB,CAApB;AACA,WAAOJ,KAAK,CAACQ,GAAN,CAAUP,MAAM,CAACG,OAAjB,EAA0BE,WAA1B,CAAP;AACH;AARwB,CAAD,EASzBf,YATyB,CAA5B","sourcesContent":["import {createAction, handleActions} from 'redux-actions';\r\nimport { pender } from 'redux-pender';\r\nimport * as AuthAPI from 'lib/api/auth';\r\n\r\nimport {Map} from 'immutable';\r\n\r\nconst CHANGE_INPUT = 'auth/CHANGE_INPUT'; // input 값 변경\r\nconst INITIALIZE_FORM = 'auth/INITIALIZE_FORM'; // form 초기화\r\n\r\nexport const checkEmailExists = createAction(CHECK_EMAIL_EXISTS, AuthAPI.checkEmailExists); // email\r\nexport const checkUsernameExists = createAction(CHECK_USERNAME_EXISTS, AuthAPI.checkUsernameExists); // username\r\n\r\nconst initialState = Map({\r\n    register: Map({\r\n        form: Map({\r\n            email: '',\r\n            username: '',\r\n            password: '',\r\n            passwordConfirm: ''\r\n        }),\r\n        exists: Map({\r\n            email: false,\r\n            password: false\r\n        })\r\n    }),\r\n    login: Map({\r\n        form: Map({\r\n            email: '',\r\n            password: ''\r\n        })\r\n    })\r\n});\r\n\r\nexport default handleActions({\r\n    [CHANGE_INPUT]: (state, action) => {\r\n        const { form, name, value } = action.payload;\r\n        return state.setIn([form, 'form', name], value);\r\n    },\r\n    [INITIALIZE_FORM]: (state, action) => {\r\n        const initialForm = initialState.get(action.payload);\r\n        return state.set(action.payload, initialForm);\r\n    }\r\n}, initialState);"]},"metadata":{},"sourceType":"module"}