{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BumSu Park\\\\React\\\\macguffin\\\\src\\\\containers\\\\Auth\\\\Login.js\";\nimport React, { Component } from 'react';\nimport { AuthContent, InputWithLabel, AuthButton, RightAlignedLink, AuthError } from 'components/Auth';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as authActions from 'redux/modules/auth';\nimport * as userActions from 'redux/modules/user';\nimport storage from 'lib/storage';\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleChange = e => {\n      const {\n        AuthActions\n      } = this.props;\n      const {\n        name,\n        value\n      } = e.target;\n      AuthActions.changeInput({\n        name,\n        value,\n        form: 'login'\n      });\n    };\n\n    this.setError = message => {\n      const {\n        AuthActions\n      } = this.props;\n      AuthActions.setError({\n        form: 'login',\n        message\n      });\n      return false;\n    };\n\n    this.handleLocalLogin = async () => {\n      const {\n        form,\n        AuthActions,\n        UserActions,\n        history\n      } = this.props;\n      const {\n        email,\n        password\n      } = form.toJS();\n\n      try {\n        await AuthActions.localLogin({\n          password\n        });\n        const loggedInfo = this.props.result.toJS();\n        UserActions.setLoggedInfo(loggedInfo);\n        history.push('/');\n        storage.set('loggedInfo', loggedInfo);\n      } catch (e) {\n        console.log('a');\n        this.setError(' 잘못된 계정정보입니다.');\n      }\n    };\n  }\n\n  componentWillUnmount() {\n    const {\n      AuthActions\n    } = this.props;\n    AuthActions.initializeForm('login');\n  }\n\n  render() {\n    const {\n      email,\n      password\n    } = this.props.form.toJS(); // form 에서 email 과 password 값을 읽어옴\n\n    const {\n      handleChange\n    } = this;\n    const {\n      error\n    } = this.props;\n    return /*#__PURE__*/React.createElement(AuthContent, {\n      title: \"\\uB85C\\uADF8\\uC778\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(InputWithLabel, {\n      label: \"\\uC774\\uBA54\\uC77C\",\n      name: \"email\",\n      placeholder: \"\\uC774\\uBA54\\uC77C\",\n      value: email,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(InputWithLabel, {\n      label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n      name: \"password\",\n      placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n      type: \"password\",\n      value: password,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }), error && /*#__PURE__*/React.createElement(AuthError, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 30\n      }\n    }, error), /*#__PURE__*/React.createElement(AuthButton, {\n      onClick: \"submitlogin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, \"\\uB85C\\uADF8\\uC778\"), /*#__PURE__*/React.createElement(RightAlignedLink, {\n      to: \"/auth/register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, \"\\uD68C\\uC6D0\\uAC00\\uC785\"));\n  }\n\n  componentWillUnmount() {\n    const {\n      AuthActions\n    } = this.props;\n    AuthActions.initializeForm('login');\n  }\n\n}\n\nexport default connect(state => ({\n  form: state.auth.getIn(['login', 'form'])\n}), dispatch => ({\n  AuthActions: bindActionCreators(authActions, dispatch)\n}))(Login);","map":{"version":3,"sources":["C:/Users/BumSu Park/React/macguffin/src/containers/Auth/Login.js"],"names":["React","Component","AuthContent","InputWithLabel","AuthButton","RightAlignedLink","AuthError","connect","bindActionCreators","authActions","userActions","storage","Login","handleChange","e","AuthActions","props","name","value","target","changeInput","form","setError","message","handleLocalLogin","UserActions","history","email","password","toJS","localLogin","loggedInfo","result","setLoggedInfo","push","set","console","log","componentWillUnmount","initializeForm","render","error","state","auth","getIn","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { AuthContent, InputWithLabel, AuthButton, RightAlignedLink, AuthError } from 'components/Auth';\r\nimport { connect } from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport * as authActions from 'redux/modules/auth';\r\nimport * as userActions from 'redux/modules/user';\r\nimport storage from 'lib/storage';\r\n\r\nclass Login extends Component {\r\n\r\n    handleChange = (e) => {\r\n        const { AuthActions } = this.props;\r\n        const { name, value } = e.target;\r\n\r\n        AuthActions.changeInput({\r\n            name,\r\n            value,\r\n            form: 'login'\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const {AuthActions} = this.props;\r\n        AuthActions.initializeForm('login')\r\n    }\r\n\r\n    setError = (message) => {\r\n        const {AuthActions} = this.props;\r\n        AuthActions.setError({\r\n            form: 'login',\r\n            message\r\n        });\r\n        return false;\r\n    }\r\n\r\n    handleLocalLogin = async()=>{\r\n        const{form, AuthActions, UserActions, history}= this.props;\r\n        const {email, password} = form.toJS();\r\n\r\n        try {\r\n            await AuthActions.localLogin({password});\r\n            const loggedInfo = this.props.result.toJS();\r\n\r\n            UserActions.setLoggedInfo(loggedInfo);\r\n            history.push('/');\r\n            storage.set('loggedInfo', loggedInfo);\r\n        } catch(e) {\r\n            console.log('a');\r\n            this.setError(' 잘못된 계정정보입니다.');\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const { email, password } = this.props.form.toJS(); // form 에서 email 과 password 값을 읽어옴\r\n        const { handleChange } = this;\r\n        const { error } = this.props;\r\n\r\n        return (\r\n            <AuthContent title=\"로그인\">\r\n                <InputWithLabel \r\n                    label=\"이메일\" \r\n                    name=\"email\" \r\n                    placeholder=\"이메일\" \r\n                    value={email} \r\n                    onChange={handleChange}\r\n                />\r\n                <InputWithLabel \r\n                    label=\"비밀번호\" \r\n                    name=\"password\" \r\n                    placeholder=\"비밀번호\" \r\n                    type=\"password\" \r\n                    value={password} \r\n                    onChange={handleChange}\r\n                />\r\n                {\r\n                    error && <AuthError>{error}</AuthError>\r\n                }\r\n                <AuthButton onClick=\"submitlogin\">로그인</AuthButton>\r\n                <RightAlignedLink to=\"/auth/register\">회원가입</RightAlignedLink>\r\n            </AuthContent>\r\n        );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const { AuthActions } = this.props;\r\n        AuthActions.initializeForm('login')\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        form: state.auth.getIn(['login', 'form'])\r\n    }),\r\n    (dispatch) => ({\r\n        AuthActions: bindActionCreators(authActions, dispatch)\r\n    })\r\n)(Login);"]},"metadata":{},"sourceType":"module"}