{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport penderMiddleware from 'redux-pender';\nimport modules from './modules';\nconst isDevelopment = process.env.NODE_ENV === 'development'; // 환경이 개발모드인지 확인합니다\n\nconst composeEnhancers = isDevelopment ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose : compose; // Todo: 미들웨어, react-hot-loader 적용\n\nconst configureStore = initialState => {\n  const store = createStore(modules, initialState, composeEnhancers(applyMiddleware(penderMiddleware()))); // hot-reloading 를 위한 코드\n\n  if (module.hot) {\n    module.hot.accept('./modules', () => {\n      const nextRootReducer = require('./modules').default;\n\n      store.replaceReducer(nextRootReducer);\n    });\n  }\n\n  return store;\n};\n\nexport default configureStore;","map":{"version":3,"sources":["C:/Users/BumSu Park/React/macguffin/src/redux/configureStore.js"],"names":["createStore","applyMiddleware","compose","penderMiddleware","modules","isDevelopment","process","env","NODE_ENV","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","configureStore","initialState","store","module","hot","accept","nextRootReducer","require","default","replaceReducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,gBAAP,MAA6B,cAA7B;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,MAAMC,aAAa,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA/C,C,CAA8D;;AAC9D,MAAMC,gBAAgB,GAAGJ,aAAa,GAAIK,MAAM,CAACC,oCAAP,IAA+CT,OAAnD,GAA8DA,OAApG,C,CAEA;;AACA,MAAMU,cAAc,GAAIC,YAAD,IAAkB;AACrC,QAAMC,KAAK,GAAGd,WAAW,CAACI,OAAD,EAAUS,YAAV,EAAwBJ,gBAAgB,CAC7DR,eAAe,CAACE,gBAAgB,EAAjB,CAD8C,CAAxC,CAAzB,CADqC,CAKrC;;AACA,MAAGY,MAAM,CAACC,GAAV,EAAe;AACXD,IAAAA,MAAM,CAACC,GAAP,CAAWC,MAAX,CAAkB,WAAlB,EAA+B,MAAM;AACjC,YAAMC,eAAe,GAAGC,OAAO,CAAC,WAAD,CAAP,CAAqBC,OAA7C;;AACAN,MAAAA,KAAK,CAACO,cAAN,CAAqBH,eAArB;AACH,KAHD;AAIH;;AAED,SAAOJ,KAAP;AACH,CAdD;;AAgBA,eAAeF,cAAf","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\r\nimport penderMiddleware from 'redux-pender';\r\nimport modules from './modules';\r\n\r\nconst isDevelopment = process.env.NODE_ENV === 'development'; // 환경이 개발모드인지 확인합니다\r\nconst composeEnhancers = isDevelopment ? (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose) : compose;\r\n\r\n// Todo: 미들웨어, react-hot-loader 적용\r\nconst configureStore = (initialState) => {\r\n    const store = createStore(modules, initialState, composeEnhancers(\r\n        applyMiddleware(penderMiddleware())\r\n    ));\r\n\r\n    // hot-reloading 를 위한 코드\r\n    if(module.hot) {\r\n        module.hot.accept('./modules', () => {\r\n            const nextRootReducer = require('./modules').default;\r\n            store.replaceReducer(nextRootReducer);\r\n        });\r\n    }\r\n\r\n    return store;\r\n}\r\n\r\nexport default configureStore;"]},"metadata":{},"sourceType":"module"}