{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BumSu Park\\\\React\\\\macguffin-master\\\\src\\\\App.js\";\n// src/App.js\nimport React, { Component } from 'react';\nimport PhoneForm from './components/PhoneForm';\nimport PhoneInfoList from './components/PhoneInfoList';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.id = 2;\n    this.state = {\n      information: [{\n        id: 0,\n        name: '김민준',\n        phone: '010-0000-0000'\n      }, {\n        id: 1,\n        name: '홍길동',\n        phone: '010-0000-0001'\n      }],\n      keyword: ''\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        keyword: e.target.value\n      });\n    };\n\n    this.handleCreate = data => {\n      const {\n        information\n      } = this.state;\n      this.setState({\n        information: information.concat({\n          id: this.id++,\n          ...data\n        })\n      });\n    };\n\n    this.handleRemove = id => {\n      const {\n        information\n      } = this.state;\n      this.setState({\n        information: information.filter(info => info.id !== id)\n      });\n    };\n\n    this.handleUpdate = (id, data) => {\n      const {\n        information\n      } = this.state;\n      this.setState({\n        information: information.map(info => id === info.id ? { ...info,\n          ...data\n        } // 새 객체를 만들어서 기존의 값과 전달받은 data를 덮어씀\n        : info // 기존의 값을 그대로 유지\n        )\n      });\n    };\n  }\n\n  render() {\n    const {\n      information,\n      keyword\n    } = this.state;\n    const filteredList = information.filter(info => info.name.indexOf(keyword) !== -1);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(PhoneForm, {\n      onCreate: this.handleCreate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"\\uAC80\\uC0C9 \\uD560 \\uC774\\uB984\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694..\",\n      onChange: this.handleChange,\n      value: keyword,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(PhoneInfoList, {\n      data: information,\n      onRemove: this.handleRemove,\n      onUpdate: this.handleUpdate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/BumSu Park/React/macguffin-master/src/App.js"],"names":["React","Component","PhoneForm","PhoneInfoList","App","id","state","information","name","phone","keyword","handleChange","e","setState","target","value","handleCreate","data","concat","handleRemove","filter","info","handleUpdate","map","render","filteredList","indexOf"],"mappings":"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","sourcesContent":["// src/App.js\nimport React, { Component } from 'react';\nimport PhoneForm from './components/PhoneForm';\nimport PhoneInfoList from './components/PhoneInfoList';\n\nclass App extends Component {\n  id = 2\n  state={\n    information: [\n    {\n      id: 0,\n      name: '김민준',\n      phone: '010-0000-0000'\n    },\n    {\n      id:1,\n      name: '홍길동',\n      phone: '010-0000-0001'\n    }\n  ],\n  keyword: ''\n  }\n  handleChange = (e) => {\n    this.setState({\n      keyword: e.target.value,\n    });\n  }\n  handleCreate = (data) =>{\n    const {information} =this.state;\n    this.setState({\n      information: information.concat({id: this.id++, ...data})\n    })\n  }\n  handleRemove = (id) => {\n    const {information} = this.state;\n    this.setState({\n      information: information.filter(info=>info.id !== id)\n    })\n  }\n  handleUpdate = (id,data)=>{\n    const {information} = this.state;\n    this.setState({\n      information: information.map(\n        info => id === info.id?\n        {...info, ...data} // 새 객체를 만들어서 기존의 값과 전달받은 data를 덮어씀\n        : info // 기존의 값을 그대로 유지\n      )\n    })\n  }\n\n  render() {\n    const { information, keyword}=this.state;\n    const filteredList = information.filter(\n      info => info.name.indexOf(keyword) !== -1\n    );\n    return (\n      <div>\n        <PhoneForm \n          onCreate={this.handleCreate}\n        />\n        <p>\n          <input\n            placeholder=\"검색 할 이름을 입력하세요..\"\n            onChange={this.handleChange}\n            value={keyword}\n            />\n        </p>\n        <hr/>\n        <PhoneInfoList \n          data={information}\n          onRemove={this.handleRemove}\n          onUpdate={this.handleUpdate}/>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}