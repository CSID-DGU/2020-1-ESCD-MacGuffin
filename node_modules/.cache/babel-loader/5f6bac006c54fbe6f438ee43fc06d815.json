{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BumSu Park\\\\React\\\\macguffin\\\\src\\\\components\\\\Asset\\\\PhoneInfo.js\";\n// file: src/component/PhoneInfo.js\nimport React, { Component } from 'react';\n\nclass PhoneInfo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // 우리는 수정 버튼을 눌렀을 때 editing  값을 true로 설정해줄 것입니다.\n      // 이 값이 true 일 때에는, 기존에 텍스트 형태로 보여주던 값들을\n      // input 형태로 보여주게 됩니다.\n      editing: false,\n      // input의 값은 유동적이겠지요? input 값을 담기 위해서 각 필드를 위한 값도\n      // 설정합니다.\n      name: '',\n      phone: ''\n    };\n\n    this.handleRemove = () => {\n      // 삭제 버튼이 클릭되면 onRemove에 id 넣어서 호출\n      const {\n        info,\n        onRemove\n      } = this.props;\n      onRemove(info.id);\n    };\n\n    this.handleToggleEdit = () => {\n      const {\n        editing\n      } = this.state;\n      this.setState({\n        editing: !editing\n      });\n    };\n\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    // 수정 상태가 아니고, info 값이 같다면 리렌더링 안함\n    if (!this.state.editing && !nextState.editing && nextProps.info === this.props.info) {\n      return false;\n    } // 나머지 경우엔 리렌더링 함\n\n\n    return true;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // 여기서는, editing 값이 바뀔 때 처리 할 로직이 적혀있습니다.\n    // 수정을 눌렀을 땐, 기존의 값이 input에 나타나고,\n    // 수정을 적용할 땐, input 의 값들을 부모한테 전달해줍니다.\n    const {\n      info,\n      onUpdate\n    } = this.props;\n\n    if (!prevState.editing && this.state.editing) {\n      // editing 값이 false -> true 로 전환 될 때\n      // info 의 값을 state에 넣어준다\n      this.setState({\n        name: info.name,\n        phone: info.phone,\n        Adate: info.ADate,\n        State: info.State\n      });\n    }\n\n    if (prevState.editing && !this.state.editing) {\n      // editing 값이 true->false로 전환 될 때\n      onUpdate(info.id, {\n        name: this.state.name,\n        phone: this.state.phone,\n        Adate: this.state.ADate,\n        State: this.state.State\n      });\n    }\n  }\n\n  render() {\n    console.log('render PhoneInfo ' + this.props.info.id);\n    const style = {\n      border: '1px solid black',\n      padding: '8px',\n      margin: '8px'\n    };\n    const {\n      editing\n    } = this.state;\n\n    if (editing) {\n      // 수정모드\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        value: this.state.name,\n        name: \"name\",\n        placeholder: \"\\uC774\\uB984\",\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        value: this.state.phone,\n        name: \"phone\",\n        placeholder: \"\\uC804\\uD654\\uBC88\\uD638\",\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        value: this.state.State,\n        name: \"State\",\n        placeholder: \"\\uBCF4\\uC720\\uC0C1\\uD0DC\",\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        value: this.state.ADate,\n        name: \"ADate\",\n        placeholder: \"\\uD68D\\uB4DD\\uB0A0\\uC9DC\",\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.handleToggleEdit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }\n      }, \"\\uC801\\uC6A9\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.handleRemove,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }\n      }, \"\\uC0AD\\uC81C\"));\n    } // 일반모드\n\n\n    const {\n      name,\n      phone,\n      State,\n      ADate\n    } = this.props.info;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 22\n      }\n    }, \"Asset Name: \", name)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 22\n      }\n    }, \"Asset ID: \", phone)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }, \"Asset State: \", State), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    }, \"AcquiredDate: \", ADate, \" \"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleToggleEdit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }\n    }, \"\\uC218\\uC815\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleRemove,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }\n    }, \"\\uC0AD\\uC81C\"));\n  }\n\n}\n\nPhoneInfo.defaultProps = {\n  info: {\n    name: '자산 명',\n    phone: '000-000-00 000',\n    State: 'O',\n    ADate: '2020.06.14',\n    id: 0\n  }\n};\nexport default PhoneInfo;","map":{"version":3,"sources":["C:/Users/BumSu Park/React/macguffin/src/components/Asset/PhoneInfo.js"],"names":["React","Component","PhoneInfo","state","editing","name","phone","handleRemove","info","onRemove","props","id","handleToggleEdit","setState","handleChange","e","value","target","shouldComponentUpdate","nextProps","nextState","componentDidUpdate","prevProps","prevState","onUpdate","Adate","ADate","State","render","console","log","style","border","padding","margin","defaultProps"],"mappings":"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","sourcesContent":["// file: src/component/PhoneInfo.js\r\nimport React, {Component} from 'react';\r\n\r\nclass PhoneInfo extends Component{\r\n    static defaultProps={\r\n        info: {\r\n            name: '자산 명',\r\n            phone: '000-000-00 000',\r\n            State:'O',\r\n            ADate:'2020.06.14',\r\n            id:0\r\n        },\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState){\r\n        // 수정 상태가 아니고, info 값이 같다면 리렌더링 안함\r\n        if(!this.state.editing\r\n            && !nextState.editing\r\n            && nextProps.info === this.props.info) {\r\n                return false;\r\n            }\r\n            // 나머지 경우엔 리렌더링 함\r\n            return true;\r\n    }\r\n\r\n    state = {\r\n        // 우리는 수정 버튼을 눌렀을 때 editing  값을 true로 설정해줄 것입니다.\r\n        // 이 값이 true 일 때에는, 기존에 텍스트 형태로 보여주던 값들을\r\n        // input 형태로 보여주게 됩니다.\r\n        editing: false,\r\n        // input의 값은 유동적이겠지요? input 값을 담기 위해서 각 필드를 위한 값도\r\n        // 설정합니다.\r\n        name: '',\r\n        phone: '',\r\n    }\r\n\r\n    handleRemove = () =>{\r\n        // 삭제 버튼이 클릭되면 onRemove에 id 넣어서 호출\r\n        const {info, onRemove } = this.props;\r\n        onRemove(info.id);\r\n    }\r\n\r\n    // editing 값을 반전시키는 함수입니다\r\n    // true -> false, false -> true\r\n    handleToggleEdit = () => {\r\n        const { editing } = this.state;\r\n        this.setState({editing: !editing});\r\n    }\r\n\r\n    handleChange=(e)=>{\r\n        const {name, value} = e.target;\r\n        this.setState({\r\n            [name]:value\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        // 여기서는, editing 값이 바뀔 때 처리 할 로직이 적혀있습니다.\r\n        // 수정을 눌렀을 땐, 기존의 값이 input에 나타나고,\r\n        // 수정을 적용할 땐, input 의 값들을 부모한테 전달해줍니다.\r\n\r\n        const {info, onUpdate} = this.props;\r\n        if(!prevState.editing && this.state.editing){\r\n            // editing 값이 false -> true 로 전환 될 때\r\n            // info 의 값을 state에 넣어준다\r\n            this.setState({\r\n                name: info.name,\r\n                phone: info.phone,\r\n                Adate: info.ADate,\r\n                State: info.State\r\n            })\r\n        }\r\n\r\n        if (prevState.editing && !this.state.editing){\r\n            // editing 값이 true->false로 전환 될 때\r\n            onUpdate(info.id, {\r\n                name: this.state.name,\r\n                phone: this.state.phone,\r\n                Adate: this.state.ADate,\r\n                State: this.state.State\r\n            });\r\n        }\r\n    }\r\n\r\n    render(){\r\n        console.log('render PhoneInfo '+ this.props.info.id)\r\n        const style={\r\n            border: '1px solid black',\r\n            padding: '8px',\r\n            margin: '8px'\r\n        };\r\n\r\n        const {editing} = this.state;\r\n\r\n        if(editing){ // 수정모드\r\n            return(\r\n                <div style={style}>\r\n                    <div>\r\n                        <input\r\n                            value={this.state.name}\r\n                            name=\"name\"\r\n                            placeholder=\"이름\"\r\n                            onChange={this.handleChange}\r\n                            />\r\n                    </div>\r\n                    <div>\r\n                        <input\r\n                            value={this.state.phone}\r\n                            name=\"phone\"\r\n                            placeholder=\"전화번호\"\r\n                            onChange={this.handleChange}\r\n                            />\r\n                    </div>\r\n                    <div>\r\n                        <input\r\n                            value={this.state.State}\r\n                            name=\"State\"\r\n                            placeholder=\"보유상태\"\r\n                            onChange={this.handleChange}\r\n                            />\r\n                    </div>\r\n                    <div>\r\n                        <input\r\n                            value={this.state.ADate}\r\n                            name=\"ADate\"\r\n                            placeholder=\"획득날짜\"\r\n                            onChange={this.handleChange}\r\n                            />\r\n                    </div>\r\n                    <button onClick={this.handleToggleEdit}>적용</button>\r\n                    <button onClick={this.handleRemove}>삭제</button>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        // 일반모드\r\n        const{\r\n            name, phone, State, ADate\r\n        } = this.props.info;\r\n\r\n        return (\r\n            <div style={style}>\r\n                <div><b>Asset Name: {name}</b></div>\r\n                <div><b>Asset ID: {phone}</b></div>\r\n                <div>Asset State: {State}</div>\r\n                <div>AcquiredDate: {ADate} </div>\r\n                <button onClick={this.handleToggleEdit}>수정</button>\r\n                <button onClick={this.handleRemove}>삭제</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PhoneInfo;"]},"metadata":{},"sourceType":"module"}